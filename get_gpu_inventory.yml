---
- hosts: xds
  connection: local
  name: version 1.0 Fetches the AFUT supported Cray XD servers GPU Inventory Details along with Model name
  gather_facts: yes
  vars:
    bmc_username: "{{ lookup('community.hashi_vault.hashi_vault', 'secret=hsys-secrets/data/torch/ipmi:username', auth_method='jwt', mount_point='kubernetes', role_id='aap', jwt=jwt) }}"
    bmc_password: "{{ lookup('community.hashi_vault.hashi_vault', 'secret=hsys-secrets/data/torch/ipmi:password', auth_method='jwt', mount_point='kubernetes', role_id='aap', jwt=jwt) }}"
    ansible_hashi_vault_url: 'https://vault.hpc.nyu.edu'
    ansible_hashi_vault_validate_certs: false
    baseuri: "{{ ansible_host }}"

  tasks:
    - name: Get Vault SA token
      kubernetes.core.k8s_info:
        api_version: v1
        kind: Secret
        name: cicd
        namespace: u-workbench-cte3
      register: cicd
      no_log: "{{ log_debug | default(true) }}"
      delegate_to: 127.0.0.1
      become: false
      tags: always
    - name: Set JWT variable
      ansible.builtin.set_fact:
        jwt: "{{ cicd.resources[0].data.token | b64decode }}"
      no_log: "{{ log_debug | default(true) }}"
      become: false
      tags: always
    - name: All GPU Inventory Details will be stored in the below csv file
      set_fact:
        output_file: "GPU_FW_Inventory_{{ ansible_date_time.date }}_{{ ansible_date_time.time }}.csv"
      run_once: True

    - name: Fetching GPU Inventory Details
      get_gpu_inventory:
        category: GetGPUInventory
        command: GetGPUFWInventory
        baseuri: "{{ baseuri }}"
        username: "{{ bmc_username }}"
        password: "{{ bmc_password }}"
        output_file_name: "{{output_file}}"
      register: inv_output
    
    - name: Parse and format GPU inventory
      set_fact:
        formatted_output: |
          
          ================================================================================
          GPU FIRMWARE INVENTORY REPORT
          ================================================================================
          Host:              {{ baseuri }}
          IP Address:        {{ inv_output.msg.split(',')[0] }}
          Model:             {{ inv_output.msg.split(',')[1] }}
          
          HGX FIRMWARE:
          -------------
          HGX BMC:           {{ inv_output.msg.split(',')[2] }}
          HGX FPGA:          {{ inv_output.msg.split(',')[17] }}
          HGX PCIe Switch:   {{ inv_output.msg.split(',')[38] }}
          
          GPU SXM FIRMWARE (8 GPUs):
          --------------------------
          GPU 1:             {{ inv_output.msg.split(',')[18] }}
          GPU 2:             {{ inv_output.msg.split(',')[19] }}
          GPU 3:             {{ inv_output.msg.split(',')[20] }}
          GPU 4:             {{ inv_output.msg.split(',')[21] }}
          GPU 5:             {{ inv_output.msg.split(',')[22] }}
          GPU 6:             {{ inv_output.msg.split(',')[23] }}
          GPU 7:             {{ inv_output.msg.split(',')[24] }}
          GPU 8:             {{ inv_output.msg.split(',')[25] }}
          
          NVSWITCH FIRMWARE (4 Switches):
          --------------------------------
          NVSwitch 0:        {{ inv_output.msg.split(',')[26] }}
          NVSwitch 1:        {{ inv_output.msg.split(',')[27] }}
          NVSwitch 2:        {{ inv_output.msg.split(',')[28] }}
          NVSwitch 3:        {{ inv_output.msg.split(',')[29] }}
          
          PCIE RETIMER FIRMWARE (8 Retimers):
          ------------------------------------
          Retimer 0:         {{ inv_output.msg.split(',')[30] }}
          Retimer 1:         {{ inv_output.msg.split(',')[31] }}
          Retimer 2:         {{ inv_output.msg.split(',')[32] }}
          Retimer 3:         {{ inv_output.msg.split(',')[33] }}
          Retimer 4:         {{ inv_output.msg.split(',')[34] }}
          Retimer 5:         {{ inv_output.msg.split(',')[35] }}
          Retimer 6:         {{ inv_output.msg.split(',')[36] }}
          Retimer 7:         {{ inv_output.msg.split(',')[37] }}
          
          GPU INFOROM VERSIONS (8 GPUs):
          -------------------------------
          GPU 1 InfoROM:     {{ inv_output.msg.split(',')[39] }}
          GPU 2 InfoROM:     {{ inv_output.msg.split(',')[40] }}
          GPU 3 InfoROM:     {{ inv_output.msg.split(',')[41] }}
          GPU 4 InfoROM:     {{ inv_output.msg.split(',')[42] }}
          GPU 5 InfoROM:     {{ inv_output.msg.split(',')[43] }}
          GPU 6 InfoROM:     {{ inv_output.msg.split(',')[44] }}
          GPU 7 InfoROM:     {{ inv_output.msg.split(',')[45] }}
          GPU 8 InfoROM:     {{ inv_output.msg.split(',')[46] }}
          
          EROT FIRMWARE:
          --------------
          ERoT BMC:          {{ inv_output.msg.split(',')[3] }}
          ERoT FPGA:         {{ inv_output.msg.split(',')[4] }}
          ERoT PCIe Switch:  {{ inv_output.msg.split(',')[15] }}
          {% for i in range(5, 13) %}
          ERoT GPU {{ i-4 }}:        {{ inv_output.msg.split(',')[i] }}
          {% endfor %}
          {% for i in range(11, 15) %}
          ERoT NVSwitch {{ i-11 }}:  {{ inv_output.msg.split(',')[i] }}
          {% endfor %}
          ================================================================================

    - name: Display formatted inventory
      debug:
        msg: "{{ formatted_output }}"
